import{a as _}from"./index-f2f12b32.js";import{B as l,h as o}from"./App-3d441835.js";import{c as w}from"./supabase-1a98d0a9.js";import"./ui-f211c0cf.js";import"./vendor-decc636a.js";import"./supabaseClient-46614053.js";const q=()=>({supabaseUrl:"https://blwypdcobizmpidmuhvq.supabase.co",supabaseAnonKey:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJsd3lwZGNvYml6bXBpZG11aHZxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQyMDgzNDcsImV4cCI6MjA1OTc4NDM0N30.YP2r-CnSaM4rKclXBivanAMBQh9sMsI95F2p87zIuWM"});let h=null;const E=()=>{if(!h){const{supabaseUrl:e,supabaseAnonKey:n}=q();h=w(e,n,{auth:{autoRefreshToken:!0,persistSession:!0}})}return h};var y=(e=>(e.AHA_MOMENT="AHA_MOMENT",e.POSITIVE_EXPERIENCE="POSITIVE_EXPERIENCE",e.SUGGESTION="SUGGESTION",e.CONFUSION="CONFUSION",e.GENERAL="GENERAL",e))(y||{}),b=(e=>(e.PENDING="PENDING",e.IN_PROGRESS="IN_PROGRESS",e.RESOLVED="RESOLVED",e))(b||{}),v=(e=>(e.ENGAGEMENT="ENGAGEMENT",e.CHECK_IN="CHECK_IN",e.QUIZ="QUIZ",e.ENCOURAGE="ENCOURAGE",e))(v||{});const c="ConsultantService",d=async()=>{_(c,"Creating consultant service","info");const e=E(),n={checkIsConsultant:async()=>{try{const{data:{user:r}}=await e.auth.getUser();if(!r)return!1;const{data:s}=await e.from("profiles").select("is_consultant").eq("id",r.id).single();return(s==null?void 0:s.is_consultant)||!1}catch(r){return o(r,"Failed to check consultant status",c),!1}},getVerifiedReaders:async()=>{try{const{data:r,error:s}=await e.from("profiles").select("*").eq("is_verified",!0);if(s)throw s;return _(c,`Found ${(r==null?void 0:r.length)||0} verified readers`,"success"),(r||[]).map(t=>({id:t.id,first_name:t.first_name,last_name:t.last_name,email:t.email,created_at:t.created_at,book_verified:!!t.book_verified,is_verified:!!t.is_verified,is_consultant:!!t.is_consultant,updated_at:t.updated_at||t.created_at}))}catch(r){return o(r,"Failed to fetch verified readers",c),[]}},getUserReadingDetails:async(r,s=l.ALICE)=>{try{_(c,"Getting user reading details","info",{userId:r,bookId:s});const{data:t,error:a}=await e.from("profiles").select("*").eq("id",r).single();if(a)throw o(a,"Failed to fetch user profile",c);const{data:i}=await e.from("reading_progress").select("*").eq("user_id",r).eq("book_id",s).single(),{data:u}=await e.from("reading_stats").select("*").eq("user_id",r).eq("book_id",s).single(),{data:f}=await e.from("interactions").select("*").eq("user_id",r).eq("book_id",s).order("created_at",{ascending:!1}),{data:g}=await e.from("feedback").select("*").eq("user_id",r).eq("book_id",s).order("created_at",{ascending:!1}),{data:m}=await e.from("help_requests").select("*").eq("user_id",r).eq("book_id",s).order("created_at",{ascending:!1}),{data:p}=await e.from("consultant_actions_log").select("*").eq("user_id",r).order("created_at",{ascending:!1});return{profile:{id:t.id,first_name:t.first_name,last_name:t.last_name,email:t.email,is_consultant:t.is_consultant,created_at:t.created_at,updated_at:t.updated_at,book_verified:!!t.book_verified,is_verified:!!t.is_verified},progress:i||null,stats:u||null,activity:{interactions:f||[],feedback:g||[],helpRequests:m||[],consultantActions:p||[]}}}catch(t){throw o(t,"Failed to get user reading details",c),t}},getPendingHelpRequests:async(r=l.ALICE)=>{try{const{data:s,error:t}=await e.from("help_requests").select("*").eq("book_id",r).eq("status","PENDING").order("created_at",{ascending:!1});if(t)throw t;return s||[]}catch(s){return o(s,"Failed to fetch pending help requests",c),[]}},getAssignedHelpRequests:async(r,s=l.ALICE)=>{try{const{data:t,error:a}=await e.from("help_requests").select("*").eq("book_id",s).eq("assigned_to",r).order("created_at",{ascending:!1});if(a)throw a;return t||[]}catch(t){return o(t,"Failed to fetch assigned help requests",c),[]}},updateHelpRequestStatus:async(r,s,t)=>{try{const a={status:s};t&&(a.assigned_to=t),s==="RESOLVED"&&(a.resolved_at=new Date().toISOString());const{data:i,error:u}=await e.from("help_requests").update(a).eq("id",r).select().single();if(u)throw u;return i}catch(a){throw o(a,"Failed to update help request status",c),a}},getAllFeedback:async(r=l.ALICE)=>{try{const{data:s,error:t}=await e.from("user_feedback").select("*").eq("book_id",r).order("created_at",{ascending:!1});if(t)throw t;return s||[]}catch(s){return o(s,"Failed to fetch all feedback",c),[]}},getPublicFeedback:async(r=l.ALICE)=>{try{const{data:s,error:t}=await e.from("user_feedback").select("*").eq("book_id",r).eq("is_public",!0).order("created_at",{ascending:!1});if(t)throw t;return s||[]}catch(s){return o(s,"Failed to fetch public feedback",c),[]}},createConsultantTrigger:async(r,s=l.ALICE,t,a)=>{try{const{data:i,error:u}=await e.from("consultant_triggers").insert({user_id:r,book_id:s,trigger_type:t,message:a||null}).select().single();if(u)throw u;return(i==null?void 0:i.id)||null}catch(i){return o(i,"Failed to create consultant trigger",c),null}},getUserTriggers:async r=>{try{const{data:s,error:t}=await e.from("consultant_triggers").select("*").eq("user_id",r).order("created_at",{ascending:!1});if(t)throw t;return s||[]}catch(s){return o(s,"Failed to fetch user triggers",c),[]}},markTriggerProcessed:async r=>{try{const{error:s}=await e.from("consultant_triggers").update({is_processed:!0,processed_at:new Date().toISOString()}).eq("id",r);if(s)throw s;return!0}catch(s){return o(s,"Failed to mark trigger as processed",c),!1}},logConsultantAction:async(r,s,t)=>{try{const{data:{user:a}}=await e.auth.getUser();if(!a)return null;const{data:i,error:u}=await e.from("consultant_actions_log").insert({consultant_id:a.id,user_id:r,action_type:s,details:t||null}).select().single();if(u)throw u;return(i==null?void 0:i.id)||null}catch(a){return o(a,"Failed to log consultant action",c),null}},submitFeedback:async(r,s=l.ALICE,t,a,i,u=!1)=>{try{const{data:f,error:g}=await e.from("user_feedback").insert({user_id:r,book_id:s,section_id:i||null,feedback_type:t,content:a,is_public:u}).select().single();if(g)throw g;return f}catch(f){return o(f,"Failed to submit feedback",c),null}},submitHelpRequest:async(r,s="550e8400-e29b-41d4-a716-446655440000",t,a,i)=>{try{const{data:u,error:f}=await e.from("help_requests").insert({user_id:r,book_id:s,section_id:a||null,content:t,context:i||null,status:"PENDING"}).select().single();if(f)throw f;return u}catch(u){return o(u,"Failed to submit help request",c),null}},getUserHelpRequests:async(r,s=l.ALICE)=>{try{const{data:t,error:a}=await e.from("help_requests").select("*").eq("user_id",r).eq("book_id",s).order("created_at",{ascending:!1});if(a)throw a;return t||[]}catch(t){return o(t,"Failed to fetch user help requests",c),[]}},getUserFeedback:async(r,s=l.ALICE)=>{try{const{data:t,error:a}=await e.from("user_feedback").select("*").eq("user_id",r).eq("book_id",s).order("created_at",{ascending:!1});if(a)throw a;return t||[]}catch(t){return o(t,"Failed to fetch user feedback",c),[]}},getConsultantAssignments:async()=>{try{const{data:r,error:s}=await e.from("consultant_assignments").select("*").eq("active",!0);if(s)throw s;const{data:t,error:a}=await e.from("help_requests").select("*").eq("status","PENDING");if(a)throw a;const{data:i,error:u}=await e.from("user_feedback").select("*").eq("is_public",!0).order("created_at",{ascending:!1}).limit(10);if(u)throw u;const{data:f,error:g}=await e.from("consultant_actions_log").select("*").order("created_at",{ascending:!1}).limit(10);if(g)throw g;return[{type:"assignments",data:r||[]},{type:"pending_requests",data:t||[]},{type:"recent_feedback",data:i||[]},{type:"recent_actions",data:f||[]}]}catch(r){return o(r,"Failed to fetch consultant assignments",c),[]}},getConsultantStats:async()=>{try{const{data:{user:r}}=await e.auth.getUser();if(!r)return{};const{data:s}=await e.from("consultant_assignments").select("*").eq("consultant_id",r.id).eq("active",!0),{data:t}=await e.from("help_requests").select("*").eq("assigned_to",r.id),{data:a}=await e.from("consultant_actions_log").select("*").eq("consultant_id",r.id);return{activeAssignments:(s==null?void 0:s.length)||0,totalHelpRequests:(t==null?void 0:t.length)||0,pendingRequests:(t==null?void 0:t.filter(i=>i.status==="PENDING").length)||0,totalActions:(a==null?void 0:a.length)||0}}catch(r){return o(r,"Failed to fetch consultant stats",c),{}}},getHelpRequests:async r=>{try{let s=e.from("help_requests").select("*").order("created_at",{ascending:!1});r&&(s=s.eq("status",r));const{data:t,error:a}=await s;if(a)throw a;return t||[]}catch(s){return o(s,"Failed to fetch help requests",c),[]}},getReaderInteractions:async(r,s)=>{try{let t=e.from("interactions").select("*").order("created_at",{ascending:!1});r&&(t=t.eq("user_id",r)),s&&(t=t.eq("event_type",s));const{data:a,error:i}=await t;if(i)throw i;return a||[]}catch(t){return o(t,"Failed to fetch reader interactions",c),[]}}};return _(c,"Consultant service created successfully","success"),n};async function S(){return(await d()).checkIsConsultant()}async function F(){return(await d()).getVerifiedReaders()}async function L(e,n=l.ALICE){return(await d()).getUserReadingDetails(e,n)}async function U(e=l.ALICE){return(await d()).getPendingHelpRequests(e)}async function O(e,n=l.ALICE){return(await d()).getAssignedHelpRequests(e,n)}async function G(e,n,r){return(await d()).updateHelpRequestStatus(e,n,r)}async function P(e=l.ALICE){return(await d()).getAllFeedback(e)}async function H(e=l.ALICE){return(await d()).getPublicFeedback(e)}async function D(e,n=l.ALICE,r,s){return(await d()).createConsultantTrigger(e,n,r,s)}async function M(e){return(await d()).getUserTriggers(e)}async function B(e){return(await d()).markTriggerProcessed(e)}async function V(e,n,r){return(await d()).logConsultantAction(e,n,r)}async function J(e,n=l.ALICE,r,s,t,a=!1){return(await d()).submitFeedback(e,n,r,s,t,a)}async function T(e,n=l.ALICE,r,s,t){return(await d()).submitHelpRequest(e,n,r,s,t)}async function Z(e,n=l.ALICE){return(await d()).getUserHelpRequests(e,n)}async function K(e,n=l.ALICE){return(await d()).getUserFeedback(e,n)}async function X(){return(await d()).getConsultantAssignments()}async function z(){return(await d()).getConsultantStats()}async function Q(e,n){return(await d()).getReaderInteractions(e,n)}export{y as FeedbackType,b as HelpRequestStatus,v as TriggerType,S as checkIsConsultant,d as createConsultantService,D as createConsultantTrigger,P as getAllFeedback,O as getAssignedHelpRequests,X as getConsultantAssignments,z as getConsultantStats,U as getPendingHelpRequests,H as getPublicFeedback,Q as getReaderInteractions,K as getUserFeedback,Z as getUserHelpRequests,L as getUserReadingDetails,M as getUserTriggers,F as getVerifiedReaders,V as logConsultantAction,B as markTriggerProcessed,J as submitFeedback,T as submitHelpRequest,G as updateHelpRequestStatus};
