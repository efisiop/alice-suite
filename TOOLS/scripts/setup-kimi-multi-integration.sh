#!/bin/bash

# Kimi K2 Multi-Integration Setup Script
# Comprehensive setup for all Kimi K2 integration methods

echo "üöÄ Setting up Kimi K2 Multi-Integration"
echo "======================================"

# Check if Claude Code CLI is installed
if command -v claude &> /dev/null; then
    echo "‚úÖ Claude Code CLI is installed: $(claude --version)"
else
    echo "‚ùå Claude Code CLI not found. Installing..."
    npm install -g @anthropic-ai/claude-code
fi

# Check current environment variables
echo ""
echo "üìã Current Environment Variables:"
echo "ANTHROPIC_AUTH_TOKEN: ${ANTHROPIC_AUTH_TOKEN:-'Not set'}"
echo "ANTHROPIC_BASE_URL: ${ANTHROPIC_BASE_URL:-'Not set'}"
echo "KIMI_API_KEY: ${KIMI_API_KEY:-'Not set'}"
echo "KIMI_API_BASE_URL: ${KIMI_API_BASE_URL:-'Not set'}"

echo ""
echo "üîß Available Integration Methods:"
echo "1. Claude Code CLI (Agentic coding with Kimi backend)"
echo "2. Cloud Code CLI (Direct Kimi access)"
echo "3. Repo Prompt (Repository analysis)"
echo "4. Direct API (Programmatic access)"

echo ""
echo "üìã Prerequisites:"
echo "‚úÖ Claude Code CLI: $(claude --version)"
echo "‚ùì Moonshot AI API Key: Get from https://platform.moonshot.ai/"
echo "‚ùì Open Router API Key: Get from https://openrouter.ai/ (for Repo Prompt)"

echo ""
echo "üîß Configuration Commands:"

# Method 1: Claude Code CLI Integration
echo ""
echo "# Method 1: Claude Code CLI Integration (Agentic)"
echo "# For full codebase awareness and file manipulation"
echo "export ANTHROPIC_AUTH_TOKEN=\"sk-YOUR_MOONSHOT_API_KEY\""
echo "export ANTHROPIC_BASE_URL=\"https://api.moonshot.ai/anthropic\""
echo ""
echo "# Test: claude \"Explain recursion in Python\""

# Method 2: Cloud Code CLI Integration
echo ""
echo "# Method 2: Cloud Code CLI Integration (Direct)"
echo "# For direct Kimi K2 access with custom functions"
echo "export KIMI_API_KEY=\"YOUR_API_KEY\""
echo "export KIMI_API_BASE_URL=\"https://api.moonshot.cn/v1\""
echo ""
echo "function Kimmy() {"
echo "  claude --api-key \"\$KIMI_API_KEY\" --api-base-url \"\$KIMI_API_BASE_URL\" \"\$@\""
echo "}"
echo ""
echo "# Test: Kimmy \"Generate a React component\""

# Method 3: Repo Prompt Integration
echo ""
echo "# Method 3: Repo Prompt Integration"
echo "# For repository analysis and code review"
echo "# 1. Get Open Router API key from https://openrouter.ai"
echo "# 2. Configure in Repo Prompt Settings > API settings"
echo "# 3. Add 'moonshot Kimmy K2' model"
echo "# 4. Select model from dropdown in Repo Prompt"

# Method 4: Direct API
echo ""
echo "# Method 4: Direct API Access"
echo "# Already configured: ./kimi_api.sh"
echo "# Test: ./kimi_api.sh chat \"Hello Kimi!\""

echo ""
echo "üéØ Enhanced Shell Configuration:"
echo ""
echo "# Add to ~/.zshrc or ~/.bashrc for persistent setup"
echo ""
echo "# Kimi K2 Multi-Integration Configuration"
echo "export KIMI_API_KEY=\"YOUR_API_KEY\""
echo "export KIMI_API_BASE_URL=\"https://api.moonshot.cn/v1\""
echo "export ANTHROPIC_AUTH_TOKEN=\"sk-YOUR_MOONSHOT_API_KEY\""
echo "export ANTHROPIC_BASE_URL=\"https://api.moonshot.ai/anthropic\""
echo ""
echo "# Cloud Code CLI Function"
echo "function Kimmy() {"
echo "  claude --api-key \"\$KIMI_API_KEY\" --api-base-url \"\$KIMI_API_BASE_URL\" \"\$@\""
echo "}"
echo ""
echo "# Quick Access Functions"
echo "function kimi-help() {"
echo "  echo \"üéØ Kimi K2 Integration Commands:\""
echo "  echo \"\""
echo "  echo \"Cloud Code CLI (Direct Kimi):\""
echo "  echo \"  Kimmy                    # Start Cloud Code with Kimi\""
echo "  echo \"  Kimmy \\\"your prompt\\\"      # Execute specific command\""
echo "  echo \"  kimi-init               # Initialize project\""
echo "  echo \"  kimi-config             # Check configuration\""
echo "  echo \"  kimi-cost               # Check usage/costs\""
echo "  echo \"\""
echo "  echo \"Claude Code CLI (Agentic):\""
echo "  echo \"  claude \\\"your prompt\\\"     # Execute with agentic capabilities\""
echo "  echo \"\""
echo "  echo \"Repo Prompt:\""
echo "  echo \"  # Use 'moonshot Kimmy K2' model in Repo Prompt\""
echo "  echo \"\""
echo "  echo \"Direct API:\""
echo "  echo \"  ./kimi_api.sh chat \\\"message\\\"  # Direct Kimi API access\""
echo "}"
echo ""
echo "# Initialize project context"
echo "function kimi-init() {"
echo "  Kimmy init"
echo "}"
echo ""
echo "# Check configuration"
echo "function kimi-config() {"
echo "  Kimmy /config"
echo "}"
echo ""
echo "# Check usage and costs"
echo "function kimi-cost() {"
echo "  Kimmy /cost"
echo "}"
echo ""
echo "# Thinking modes"
echo "function kimi-think() {"
echo "  Kimmy think \"\$@\""
echo "}"
echo ""
echo "function kimi-think-hard() {"
echo "  Kimmy \"think hard\" \"\$@\""
echo "}"
echo ""
echo "# Project-specific functions"
echo "function kimi-review() {"
echo "  Kimmy \"Review the current codebase and suggest improvements\""
echo "}"
echo ""
echo "function kimi-refactor() {"
echo "  Kimmy \"Refactor the code for better performance and maintainability\""
echo "}"
echo ""
echo "function kimi-test() {"
echo "  Kimmy \"Generate comprehensive unit tests for the current module\""
echo "}"
echo ""
echo "function kimi-docs() {"
echo "  Kimmy \"Generate documentation for the current module\""
echo "}"
echo ""
echo "# Project-specific shortcuts"
echo "function kimi-alice() {"
echo "  cd /Users/efisiopittau/Project_1/alice-suite"
echo "  Kimmy \"\$@\""
echo "}"
echo ""
echo "function kimi-monorepo() {"
echo "  cd /Users/efisiopittau/Project_1/alice-suite/alice-suite-monorepo"
echo "  Kimmy \"\$@\""
echo "}"

echo ""
echo "üéØ Usage Examples:"
echo ""
echo "# Claude Code CLI (Agentic)"
echo "claude \"Explain recursion in Python\""
echo "claude init"
echo "claude /config"
echo ""
echo "# Cloud Code CLI (Direct)"
echo "Kimmy \"Generate a React component\""
echo "kimi-init"
echo "kimi-config"
echo "kimi-cost"
echo ""
echo "# Repo Prompt"
echo "# Select 'moonshot Kimmy K2' from model dropdown"
echo "# Use for repository analysis and code review"
echo ""
echo "# Direct API"
echo "./kimi_api.sh chat \"Hello Kimi!\""

echo ""
echo "üéØ Use Case Comparison:"
echo ""
echo "Claude Code CLI (Agentic):"
echo "  ‚úÖ Full codebase awareness"
echo "  ‚úÖ File manipulation and Git operations"
echo "  ‚úÖ Multi-step workflows"
echo "  ‚úÖ Context preservation"
echo "  ‚úÖ IDE integration"
echo ""
echo "Cloud Code CLI (Direct):"
echo "  ‚úÖ Direct Kimi K2 access"
echo "  ‚úÖ Custom functions and workflows"
echo "  ‚úÖ Quick queries and debugging"
echo "  ‚úÖ Flexible configuration"
echo ""
echo "Repo Prompt:"
echo "  ‚úÖ Repository analysis"
echo "  ‚úÖ Code review and quality assessment"
echo "  ‚úÖ Documentation generation"
echo "  ‚úÖ Bug detection"
echo ""
echo "Direct API:"
echo "  ‚úÖ Programmatic access"
echo "  ‚úÖ Custom integrations"
echo "  ‚úÖ Script automation"
echo "  ‚úÖ Direct control"

echo ""
echo "üîó Useful Links:"
echo "- Moonshot AI Platform: https://platform.moonshot.ai/"
echo "- Open Router: https://openrouter.ai/"
echo "- Claude Code CLI Docs: https://docs.anthropic.com/claude/docs/claude-code"
echo "- Integration Guides:"
echo "  - Claude Code: KIMI-CLAUDE-CODE-INTEGRATION.md"
echo "  - Advanced: KIMI-K2-ADVANCED-INTEGRATION.md"

echo ""
echo "‚ö†Ô∏è  Important Notes:"
echo "- Keep API keys secure and never commit to version control"
echo "- Monitor usage in respective dashboards"
echo "- Each method serves different use cases"
echo "- Can be used together for comprehensive AI assistance"
echo "- Test each integration after setup"

echo ""
echo "üéâ Setup complete! Follow the configuration steps above to enable each integration method."
echo ""
echo "üí° Pro Tip: Use 'kimi-help' after adding the shell configuration to see all available commands." 