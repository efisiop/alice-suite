import{r as S,S as i,h as c}from"./App-49df8fbc.js";import{a as r}from"./index-81c07cf2.js";import"./ui-c2c9966d.js";import"./vendor-91e15b2e.js";import"./supabaseClient-510d7de7.js";import"./supabase-215a852a.js";const E=async()=>(r("SampleService","Creating sample service","info"),{getSampleData:async e=>{try{return r("SampleService",`Getting sample data for ${e}`,"info"),{id:e,name:"Sample Data",description:"This is sample data from the sample service",createdAt:new Date().toISOString()}}catch(t){throw c(t,"sampleService","getSampleData")}},createSampleData:async e=>{try{return r("SampleService","Creating sample data","info"),{id:`sample_${Date.now()}`,...e,createdAt:new Date().toISOString()}}catch(t){throw c(t,"sampleService","createSampleData")}},updateSampleData:async(e,t)=>{try{return r("SampleService",`Updating sample data for ${e}`,"info"),!0}catch(s){throw c(s,"sampleService","updateSampleData")}},deleteSampleData:async e=>{try{return r("SampleService",`Deleting sample data for ${e}`,"info"),!0}catch(t){throw c(t,"sampleService","deleteSampleData")}}}),p=async a=>(await S.getService(i.SAMPLE_SERVICE)).getSampleData(a),m=async a=>(await S.getService(i.SAMPLE_SERVICE)).createSampleData(a),n=async(a,e)=>(await S.getService(i.SAMPLE_SERVICE)).updateSampleData(a,e),l=async a=>(await S.getService(i.SAMPLE_SERVICE)).deleteSampleData(a),y={getSampleData:p,createSampleData:m,updateSampleData:n,deleteSampleData:l};export{m as createSampleData,E as createSampleService,y as default,l as deleteSampleData,p as getSampleData,n as updateSampleData};
