import{a as n}from"./index-81c07cf2.js";import{r as p,g as E,d as v,s as F,l as L,I as V,a as k,b as C}from"./App-49df8fbc.js";import"./supabase-215a852a.js";import"./vendor-91e15b2e.js";import"./ui-c2c9966d.js";import"./supabaseClient-510d7de7.js";const D={"look up":"to search for information or direct one's gaze upward","find out":"to discover or learn something","come across":"to encounter or discover by chance","run into":"to meet someone unexpectedly","get up":"to rise from bed or a sitting position","sit down":"to take a seat","stand up":"to rise to a standing position","turn around":"to change direction or reverse course","come back":"to return","go away":"to leave","come in":"to enter","go out":"to leave a place","put on":"to wear or apply something","take off":"to remove clothing or depart","pick up":"to lift or collect something","put down":"to place something on a surface","come up":"to arise or appear","go down":"to descend or decrease","come out":"to emerge or be revealed","go in":"to enter","look down":"to direct one's gaze downward","come over":"to visit someone","go over":"to review or examine","come through":"to succeed or provide help","go through":"to experience or examine","come along":"to accompany or progress","go along":"to accompany or agree","come about":"to happen or occur","go about":"to proceed with or handle","go across":"to cross or traverse","come after":"to follow or pursue","go after":"to pursue or chase","come before":"to precede or appear in front of","go before":"to precede or appear before","come between":"to interfere or separate","go between":"to mediate or act as intermediary","come by":"to obtain or visit","go by":"to pass or follow","come for":"to arrive to collect or attack","go for":"to attempt or choose","come from":"to originate from","go from":"to depart from","come into":"to inherit or acquire","go into":"to enter or investigate","come of":"to result from","go of":"to explode or detonate","come off":"to succeed or be removed","go off":"to explode or leave","come on":"to begin or encourage","go on":"to continue or happen","come round":"to visit or recover consciousness","go round":"to circulate or visit","come to":"to amount to or regain consciousness","go to":"to attend or approach","come under":"to be subjected to","go under":"to sink or fail","come upon":"to encounter or discover","go upon":"to base on or rely on","come with":"to accompany or include","go with":"to accompany or match"};function T(a){const o=a.toLowerCase().trim();if(D[o])return{phrase:o,definition:D[o],isPhrasal:!0};const e=[o,o.replace(/\s+/g," "),o.replace(/[.,!?;:'"]/g,""),o.replace(/[.,!?;:'"]/g,"").replace(/\s+/g," ")];for(const r of e)if(D[r])return{phrase:r,definition:D[r],isPhrasal:!0};return null}async function $(a){try{const o=a.replace(/[.,!?;:'"]/g,"").trim();n("DictionaryService","Fetching Alice glossary definition from Supabase","debug",{word:o});const e=await k(o);return e?(n("DictionaryService",`Found definition for "${o}" in Alice glossary`,"success"),{term:e.term,definition:e.definition,examples:e.example?[e.example]:void 0,relatedTerms:void 0,pronunciation:void 0,source:"glossary",wordOrigin:void 0}):(n("DictionaryService",`No definition found for "${o}" in Alice glossary`,"debug"),null)}catch(o){return n("DictionaryService","Error fetching Alice glossary definition","error",o),null}}async function N(a){var o;try{n("DictionaryService","Fetching from Free Dictionary API","info",{word:a});const e=await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${encodeURIComponent(a)}`);if(!e.ok){if(e.status===404)return n("DictionaryService","Word not found in Free Dictionary API","warning",{word:a}),null;throw new Error(`API error: ${e.statusText}`)}const r=await e.json();if(!r||!r[0]||!r[0].meanings||!r[0].meanings[0])throw new Error("Invalid response format from API");const t=[],i=[],c=[],s=[];let f="";return r[0].meanings.forEach(d=>{d.definitions.forEach(l=>{l.definition&&t.push(l.definition),l.example&&i.push(l.example)}),d.synonyms&&c.push(...d.synonyms),d.antonyms&&s.push(...d.antonyms)}),r[0].etymologies&&r[0].etymologies[0]&&(f=r[0].etymologies[0]),{term:a,definition:t.join(`

`),examples:i.length>0?i:void 0,pronunciation:(o=r[0])==null?void 0:o.phonetic,relatedTerms:[...new Set([...c,...s])].slice(0,10),source:"external",wordOrigin:f||void 0}}catch(e){return n("DictionaryService","Error fetching from Free Dictionary API","error",e),null}}function P(a){return n("DictionaryService","Local dictionary lookup (deprecated)","debug",{word:a}),null}async function K(a,o,e,r){try{const t=o.replace(/[.,!?;:'"\/\\()\[\]{}]/g,"").trim();n("DictionaryService","Fetching definition from database","info",{bookId:a,term:t,sectionId:e,chapterId:r});const{data:i,error:c}=await C(a.toString(),t,e==null?void 0:e.toString(),r==null?void 0:r.toString());return c?(n("DictionaryService","Error fetching from database","warning",c),null):i?(n("DictionaryService","Found definition in database","success",{term:t}),{term:o,definition:i,source:"database"}):(n("DictionaryService","No definition found in database","info",{term:t}),null)}catch(t){return n("DictionaryService","Error fetching definition from database","error",t),null}}const M=async()=>(n("DictionaryService","Creating dictionary service","info"),{getDefinition:async(o,e,r,t)=>{n("DictionaryService","Getting definition","info",{bookId:o,term:e,sectionId:r,chapterId:t});const i=e.replace(/[.,!?;:'"\/\\()\[\]{}]/g,"").trim(),c=i.toLowerCase(),s=`definition_${o}_${c}${r?`_${r}`:""}${t?`_${t}`:""}`;try{const f=v.get(s);if(f)return n("DictionaryService","Found definition in cache","success",{term:i,source:f.source}),f;const d=await $(i);if(d)return n("DictionaryService","Found definition in Alice glossary","success",{term:i}),v.set(s,d,24*60*60*1e3),d;const l=T(i);if(l){n("DictionaryService","Detected phrasal verb","info",{term:i,phrase:l.phrase});const y={term:l.phrase,definition:l.definition,examples:[`She ${l.phrase} the information in the dictionary.`],source:"glossary",isPhrasalVerb:!0,wordOrigin:"Phrasal verb: verb + preposition/adverb combination"};return v.set(s,y,24*60*60*1e3),y}const m=await K(o,i,r,t);if(m)return n("DictionaryService","Found definition in database with context","success",{term:i}),v.set(s,m,24*60*60*1e3),m;const h=await N(i);if(h)return n("DictionaryService","Found definition in external API","info",{term:i}),v.set(s,h,24*60*60*1e3),h;const u=P(i);n("DictionaryService","No definition found for term","warning",{term:i});const g={term:i,definition:"No definition found for this term.",source:"not_found"};return v.set(s,g,60*60*1e3),g}catch(f){return n("DictionaryService","Error getting definition","error",{term:i,error:f}),{term:i,definition:"An error occurred while retrieving the definition. Please try again.",source:"not_found"}}},getContextAwareDefinition:async(o,e,r,t,i)=>{try{const c=await O(o,e,t,i);if(!c||c.source==="not_found")return c;const s=_(e,r,c),f={...c,definition:s.relevantDefinition,contextScore:s.score,contextKeywords:s.keywords,isContextAware:!0,wordOrigin:s.preserveWordOrigin?c.wordOrigin:void 0};return n("DictionaryService","Generated context-aware definition","info",{term:e,contextScore:s.score,originalLength:c.definition.length,contextLength:s.relevantDefinition.length,preserveWordOrigin:s.preserveWordOrigin}),f}catch(c){return n("DictionaryService","Error getting context-aware definition","error",c),await O(o,e,t,i)}},logDictionaryLookup:async(o,e,r,t,i)=>{try{n("DictionaryService","Logging dictionary lookup","info",{userId:o,bookId:e,sectionId:r,term:t,found:i}),await F(o.toString(),e.toString(),`Dictionary lookup: ${t}`,i?`Definition found for "${t}"`:`No definition found for "${t}"`,r==null?void 0:r.toString()),await L(o.toString(),V.DEFINITION_LOOKUP,{bookId:e.toString(),sectionId:r==null?void 0:r.toString(),content:t,definitionFound:i}).catch(c=>{n("DictionaryService","Error logging definition lookup interaction","error",c)})}catch(c){n("DictionaryService","Error logging dictionary lookup","error",c)}},saveToVocabulary:async(o,e,r)=>{try{n("DictionaryService","Saving to vocabulary","info",{userId:o,term:e});const t=JSON.parse(localStorage.getItem("userVocabulary")||"{}");t[o]||(t[o]=[]);const i=t[o].findIndex(c=>c.term===e);return i!==-1?t[o][i]={term:e,definition:r,savedAt:new Date().toISOString(),updatedAt:new Date().toISOString()}:t[o].push({term:e,definition:r,savedAt:new Date().toISOString()}),localStorage.setItem("userVocabulary",JSON.stringify(t)),!0}catch(t){return n("DictionaryService","Error saving to vocabulary","error",t),!1}},getUserVocabulary:async o=>{try{return JSON.parse(localStorage.getItem("userVocabulary")||"{}")[o]||[]}catch(e){return n("DictionaryService","Error getting vocabulary","error",e),[]}},removeFromVocabulary:async(o,e)=>{try{const r=JSON.parse(localStorage.getItem("userVocabulary")||"{}");if(!r[o])return!1;const t=r[o].findIndex(i=>i.term===e);return t===-1?!1:(r[o].splice(t,1),localStorage.setItem("userVocabulary",JSON.stringify(r)),!0)}catch(r){return n("DictionaryService","Error removing from vocabulary","error",r),!1}},clearDefinitionCache:()=>{v.clear(),n("DictionaryService","Definition cache cleared","info")}});async function O(a,o,e,r){return(await p.getService("dictionaryService")).getDefinition(a,o,e,r)}async function q(a,o,e,r,t){return(await p.getService("dictionaryService")).logDictionaryLookup(a,o,e,r,t)}async function R(a,o,e){return(await p.getService("dictionaryService")).saveToVocabulary(a,o,e)}async function B(a){return(await p.getService("dictionaryService")).getUserVocabulary(a)}async function H(a,o){return(await p.getService("dictionaryService")).removeFromVocabulary(a,o)}function Q(){p.get("dictionaryService").clearDefinitionCache()}async function X(){try{return await E()}catch(a){return n("DictionaryService","Error getting Alice glossary terms","error",a),new Set}}function _(a,o,e){const r=o.toLowerCase();a.toLowerCase();const t=x(r),i=x(e.definition.toLowerCase()),c=t.filter(u=>i.includes(u)),s=c.length/Math.max(t.length,1),d=["origin","etymology","derived","comes from","meaning","root","history","old","ancient","latin","greek","french","german"].some(u=>r.includes(u));let l=e.definition,m="";if(e.examples&&e.examples.length>0){const u=e.examples.reduce((g,y)=>{const w=x(y.toLowerCase()),S=w.filter(b=>t.includes(b)).length/Math.max(w.length,1);return S>g.score?{example:y,score:S}:g},{example:"",score:0});u.score>.3&&(m=u.example)}if(s>.2){const u=e.definition.split(/[.!?]+/).filter(g=>g.trim());if(u.length>1){const g=u.reduce((y,w)=>{const S=x(w.toLowerCase()),b=S.filter(A=>t.includes(A)).length/Math.max(S.length,1);return b>y.score?{sentence:w,score:b}:y},{sentence:u[0],score:0});g.score>.1&&(l=g.sentence.trim(),m&&(l+=` (e.g., "${m}")`))}}if(l.length>200){const u=l.substring(0,200).trim(),g=u.lastIndexOf(" ");g>150?l=u.substring(0,g)+"...":l=u+"..."}const h=d||!!(e.wordOrigin&&(e.wordOrigin.includes("Old French")||e.wordOrigin.includes("Latin")||e.wordOrigin.includes("Greek")||e.wordOrigin.includes("Compound word")||e.wordOrigin.includes("Named after")));return{relevantDefinition:l,score:s,keywords:c,preserveWordOrigin:h}}function x(a){const o=new Set(["the","a","an","and","or","but","in","on","at","to","for","of","with","by","is","are","was","were","be","been","being","have","has","had","do","does","did","will","would","could","should","may","might","must","can","this","that","these","those","i","you","he","she","it","we","they","me","him","her","us","them","my","your","his","her","its","our","their","mine","yours","hers","ours","theirs"]);return(a.match(/\b[a-z]{3,}\b/g)||[]).filter(r=>!o.has(r))}export{Q as clearDefinitionCache,M as createDictionaryService,X as getAliceGlossaryTerms,O as getDefinition,B as getUserVocabulary,q as logDictionaryLookup,H as removeFromVocabulary,R as saveToVocabulary};
