import{c as h}from"./supabase-215a852a.js";import{a as s}from"./index-81c07cf2.js";const l=5,S=500,_=3e4,v=1e4,k=()=>({supabaseUrl:"https://blwypdcobizmpidmuhvq.supabase.co",supabaseAnonKey:"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJsd3lwZGNvYml6bXBpZG11aHZxIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQyMDgzNDcsImV4cCI6MjA1OTc4NDM0N30.YP2r-CnSaM4rKclXBivanAMBQh9sMsI95F2p87zIuWM"});let g=null,$=0;const E=(r,e="Supabase")=>{r&&(typeof r=="string"?s("SupabaseClient",`${e}: ${r}`,"error"):r.message?s("SupabaseClient",`${e}: ${r.message}`,"error",{code:r.code,details:r.details}):s("SupabaseClient",`${e}: Unknown error format`,"error",r))},m=async()=>{const r=Date.now();try{if(!g||r-$>_){s("SupabaseClient","Initializing Supabase client",g?"info":"debug");const{supabaseUrl:e,supabaseAnonKey:o}=k();g=h(e,o,{auth:{autoRefreshToken:!0,persistSession:!0}}),$=r}return g}catch(e){throw E(e,"Client initialization"),e}},B=async(r,e)=>{var c,u,p,d,b;let o=0,a=S;const i=Date.now();for(;o<l;)try{const t=Date.now();s("SupabaseClient",`Executing ${e} (attempt ${o+1}/${l})`,"debug");const n=await r(),f=Date.now()-t;return f>2e3?s("SupabaseClient",`${e} completed in ${f}ms (slow operation)`,"warning"):s("SupabaseClient",`${e} completed in ${f}ms`,"debug"),n}catch(t){o++;const n=((c=t.message)==null?void 0:c.includes("network"))||((u=t.message)==null?void 0:u.includes("timeout"))||((p=t.message)==null?void 0:p.includes("connection")),f=t.code==="429"||((d=t.message)==null?void 0:d.includes("rate limit"))||((b=t.message)==null?void 0:b.includes("too many requests")),C=Date.now()-i;if(C>5e3)throw s("SupabaseClient",`${e} taking too long (${C}ms) - giving up after ${o} attempts`,"error"),t;const w=o>=l?"error":"warning";if(s("SupabaseClient",`${e} attempt ${o}/${l} failed: ${t.message}`,w),E(t,`${e} (attempt ${o}/${l})`),o>=l)throw s("SupabaseClient",`${e} failed after ${l} attempts`,"error"),t;f?a=Math.min(a*1.5,v):a=Math.min(S*(o+.5),2e3),s("SupabaseClient",`Retrying ${e} in ${Math.round(a)}ms (${n?"network issue":f?"rate limit":"error"})`,"debug"),await new Promise(y=>setTimeout(y,a))}throw new Error(`Failed ${e} after ${l} retries`)};async function D(r,e){try{console.log("SupabaseClient: Using fast profile update for user:",r,e);const o=await m(),{data:a,error:i}=await o.rpc("fast_profile_update",{user_id:r,first_name:e.first_name||null,last_name:e.last_name||null,email:e.email||null,book_verified:e.book_verified===void 0?null:e.book_verified});if(i)throw console.error("SupabaseClient: Fast profile update failed:",i),i;return{data:a,error:null}}catch(o){return console.error("SupabaseClient: Error in fast profile update:",o),{data:null,error:o}}}async function R(r,e,o,a){try{s("SupabaseClient",`Verifying book code: ${r} for user: ${e}`,"info"),console.log(`DEBUG: Verifying book code: ${r} for user: ${e}`),console.log(`DEBUG: First name: ${o}, Last name: ${a}`);const i=await m(),{data:c,error:u}=await i.from("verification_codes").select("*, books(id, title, author)").eq("code",r.toUpperCase()).single();if(console.log("DEBUG: Verification code check result:",{data:c,error:u}),u||!c)return s("SupabaseClient","Invalid verification code","error",u),console.log("DEBUG: Invalid verification code:",u),{success:!1,error:"Invalid verification code"};if(c.is_used)return s("SupabaseClient","Code already used","warning"),console.log("DEBUG: Code already used"),{success:!1,error:"This code has already been used"};const p=i.from("verification_codes").update({is_used:!0,used_by:e}).eq("code",r.toUpperCase()),d={book_verified:!0,...o?{first_name:o}:{},...a?{last_name:a}:{}};console.log("DEBUG: Profile updates to apply:",d);const b=D(e,d),[t,n]=await Promise.all([p,b]);return t.error?(s("SupabaseClient","Error updating verification code","error",t.error),console.log("DEBUG: Error updating verification code:",t.error),{success:!1,error:"Error updating verification code"}):n.error?(s("SupabaseClient","Error updating profile","error",n.error),console.log("DEBUG: Error updating profile:",n.error),{success:!1,error:`Profile update failed: ${String(n.error)}`,verificationStatus:"code_marked_used_profile_update_failed"}):(console.log("DEBUG: Profile updated successfully:",n.data),s("SupabaseClient","Book code verified successfully","success"),{success:!0,data:c})}catch(i){return s("SupabaseClient","Error verifying book code","error",i),console.log("DEBUG: Error verifying book code:",i),{success:!1,error:"Error verifying book code"}}}const G=async(r=!1)=>{try{s("SupabaseClient","Checking Supabase connection","info");const e=await m(),{data:o,error:a}=await e.from("books").select("id").limit(1);return a?(s("SupabaseClient",`Supabase connection check failed: ${a.message}`,"error"),!1):(s("SupabaseClient","Supabase connection check successful","success"),!0)}catch(e){return s("SupabaseClient",`Supabase connection check error: ${e instanceof Error?e.message:String(e)}`,"error"),!1}};export{G as c,B as e,m as g,R as v};
