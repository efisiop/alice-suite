import{getSupabaseClient as l}from"./supabaseClient-e403129e.js";import"./index-093ae4d1.js";import"./index-a2a96a2b.js";const s={users:new Map,profiles:new Map,verificationCodes:new Map([["ALICE123",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}],["WONDERLAND",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}],["RABBIT",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}],["TEAPARTY",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}],["CHESHIRE",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}]]),books:new Map([["550e8400-e29b-41d4-a716-446655440000",{id:"550e8400-e29b-41d4-a716-446655440000",title:"Alice in Wonderland",author:"Lewis Carroll",description:"The classic tale of a girl who falls through a rabbit hole into a fantasy world.",total_pages:100}]]),readingProgress:new Map,readingStats:new Map,aiInteractions:new Map},r=()=>{s.users=new Map,s.profiles=new Map,s.readingProgress=new Map,s.readingStats=new Map,s.aiInteractions=new Map,s.verificationCodes=new Map([["ALICE123",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}],["WONDERLAND",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}],["RABBIT",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}],["TEAPARTY",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}],["CHESHIRE",{is_used:!1,used_by:null,book_id:"550e8400-e29b-41d4-a716-446655440000"}]])},d=()=>{console.log("=== MOCK DATA DEBUG ==="),console.log("Users:",Array.from(s.users.entries())),console.log("Profiles:",Array.from(s.profiles.entries())),console.log("Verification Codes:",Array.from(s.verificationCodes.entries())),console.log("Reading Progress:",Array.from(s.readingProgress.entries())),console.log("=======================")};typeof window<"u"&&(window._mockData=s,window._mockDebug={resetMockData:r,debugMockData:d});async function c(){var t;const e=await l(),a=await e.auth.getSession(),o=(t=a.data.session)==null?void 0:t.user;if(console.log("Auth State:"),console.log("- Session exists:",!!a.data.session),console.log("- User ID:",(o==null?void 0:o.id)||"Not logged in"),o){const{data:n}=await e.from("verification_codes").select("*").eq("used_by",o.id).eq("is_used",!0);console.log("- Verification status:",n&&n.length>0?"Verified":"Not verified");const{data:i}=await e.from("profiles").select("*").eq("id",o.id).single();console.log("- Profile exists:",!!i),i&&console.log("- Name:",`${i.first_name} ${i.last_name}`)}}async function u(){try{const e=await l(),{data:a,error:o}=await e.from("books").select("title").limit(1);return console.log("Database connection:",o?"Failed":"Success"),console.log("Sample data:",a),!o}catch(e){return console.error("Database connection test failed:",e),!1}}function _(){typeof window<"u"&&(window._debug={getStoredAuth:()=>{try{const e=localStorage.getItem("mockAuthSession");return e?JSON.parse(e):null}catch(e){return console.error("Error parsing stored session:",e),null}},mockData:s,showMockData:d,resetMockData:r,clearAuth:()=>{localStorage.removeItem("mockAuthSession"),console.log("Cleared stored auth session")},verifyCode:(e,a)=>{const o=s.verificationCodes.get(e);return o?(o.is_used=!0,o.used_by=a,s.verificationCodes.set(e,o),console.log(`Set code ${e} as used by ${a}`),!0):(console.log(`Code ${e} not found`),!1)},checkAuth:c,testDb:u},console.log("Debug helpers initialized. Try window._debug in console"))}export{c as debugAuthState,_ as initializeDebugHelpers,u as testDatabaseConnection};
