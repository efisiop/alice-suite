import{i as t,e as a}from"./index-e0670901.js";import{l as b}from"./index-e0670901.js";const r=t,o=async(e=!1)=>{try{a("SupabaseClient","Checking Supabase connection","info");const s=t(),{data:i,error:n}=await s.from("books").select("id").limit(1);return n?(a("SupabaseClient",`Supabase connection check failed: ${n.message}`,"error"),!1):(a("SupabaseClient","Supabase connection check successful","success"),!0)}catch(s){return a("SupabaseClient",`Supabase connection check error: ${s instanceof Error?s.message:String(s)}`,"error"),!1}},u={auth:{getUser:()=>t().auth.getUser(),signInWithPassword:e=>t().auth.signInWithPassword(e),signOut:()=>t().auth.signOut()},from:e=>t().from(e)},l=(e,s="Supabase")=>{e&&(typeof e=="string"?a("SupabaseClient",`${s}: ${e}`,"error"):e.message?a("SupabaseClient",`${s}: ${e.message}`,"error",{code:e.code,details:e.details}):a("SupabaseClient",`${s}: Unknown error format`,"error",e))};export{o as checkSupabaseConnection,t as default,r as getSupabaseClient,l as handleSupabaseError,b as initializeSupabase,u as supabase};
